#!/bin/bash
#
# The line above tells Torque which shell PBS should use to run the
# script (if you do not specify it, you could have surprises).
# We can use the bash, sh, ksh, csh, tcsh, zsh, perl or python interpreters
# although it is probably best to limit yourself to the classic ones
# (first five).
#

# **************************************************************
#
#            TYPICAL PBS OPTION EXAMPLES
#
# **************************************************************

# https://wiki.calculquebec.ca/w/Exemple_de_script_avec_documentation_des_options_de_qsub/en
# To submit this file, use
#          qsub example.pbs

# **************************************************************
# Load modules
module load iomkl/2015b
module load matplotlib/1.4.3-Python-2.7.10 
module load CUDA
export OMPI_MCA_mtl=^psm
# **************************************************************


# **************************************************************
# Account
#PBS -A dpz-653-01

# Ressources
#PBS -l nodes=1:ppn=1:gpus=1
#PBS -l pmem=4000m
#PBS -l walltime=72:00:00

#Â Log file
#PBS -j oe

# Queue
#PBS -q aw 

# Sending of email:
#PBS -M crestel.leopold@gmail.com
#PBS -m bae

# Interruption rules
#PBS -r n
# **************************************************************

SRC=$HOME/lop/Source

cd $SRC; python main.py cRBM gradient_descent event_level discrete_units 4&
cd $SRC; python main.py cRnnRbm gradient_descent event_level discrete_units 4&
cd $SRC; python main.py FGcRBM gradient_descent event_level discrete_units 4&
cd $SRC; python main.py LSTM gradient_descent event_level discrete_units 4&
cd $SRC; python main.py RBM gradient_descent event_level discrete_units 4&
cd $SRC; python main.py RnnRbm gradient_descent event_level discrete_units 4&

wait
